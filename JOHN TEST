#include <iostream>
#include "utility.h"
#include "ohhi.h"

void test_count_unknown_squares();
void test_board_has_no_threes();
void test_row_has_no_threes_of_color();

void test_board_has_no_duplicates();
// declare more test functions here

void startTests() {
    //test_board_has_no_threes();
    //test_row_has_no_threes_of_color();
    test_board_has_no_duplicates();
}


void test_count_unknown_squares() {
    int board[MAX_SIZE][MAX_SIZE];

    // test case 1
    string test_board_1[] = {"XOXO",
                             "--OO",
                             "---X",
                             "--O-"};
    int size_1 = 4;
    read_board_from_string(board, test_board_1, size_1);
    cout << count_unknown_squares(board, size_1) << endl;

    // add more tests here
}

string test_board_1[] = {"X-----",
                         "X----X",
                         "--O--X",
                         "--O---",
                         "X-----",
                         "---X--"};

string test_board_2[] = {"XXX---",
                         "X----X",
                         "--O--X",
                         "--O---",
                         "X-----",
                         "---X--"};

void test_board_has_no_threes() {
    int board[MAX_SIZE][MAX_SIZE];
    
    int size_1 = 6;
    read_board_from_string(board, test_board_1, size_1);
    cout << "Expected: 1 " << "Actual: ";
    cout << board_has_no_threes(board, size_1)<< endl;
    
    int size_2 = 6;
    read_board_from_string(board, test_board_2, size_2);
    cout << "Expected: 0 " << "Actual: ";
    cout << board_has_no_threes(board, size_2)<< endl;
}

void test_row_has_no_threes_of_color() {
    int board[MAX_SIZE][MAX_SIZE];
    
    int size = 6;
    read_board_from_string(board, test_board_1, size);
    cout << "Expected: 1 " << "Actual: ";
    cout << row_has_no_threes_of_color(board, size, 0, RED) << endl;
}

void test_col_has_no_threes_of_color() {
    int board[MAX_SIZE][MAX_SIZE];
    
    int size = 6;
    read_board_from_string(board, test_board_1, size);
    cout << "Expected: 1 " << "Actual: ";
    cout << col_has_no_threes_of_color(board, size, 0, RED) << endl;
}

void test_board_has_no_duplicates() {
    
}
